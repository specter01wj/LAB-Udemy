set serveroutput on;

--Declaring & Initializing & Using Variables 

declare
  v_text varchar2(50) not null default 'James Wang';
begin
  v_text := 'PL/SQL' || ' Udemy';
  dbms_output.put_line(v_text);
end;

declare
  v_num number(4,2) not null := 50.42;
begin
  dbms_output.put_line(v_num || ' Beg to ADV');
end;


declare
  v_num pls_integer not null := 50;
begin
  dbms_output.put_line(v_num || ' Beg to ADV');
end;

declare
  v_num binary_float not null := 50.1234f;
begin
  dbms_output.put_line(v_num || ' Beg to ADV');
end;

declare
  --v_date date not null := sysdate;
  --v_date date not null := '22-nov-18 14:01:33';
  --v_date timestamp with time zone not null := systimestamp;
  --v_date interval day(4) to second(2) := '24 02:05:21.012';
  v_date interval year to month := '12-3';
begin
  dbms_output.put_line(v_date || ' Beg to ADV');
end;

declare
v_bool varchar2 := true;
begin
  dbms_output.put_line(v_bool);
end;


--Using %Type Attribute

declare
  v_type employees.job_id%type;
  begin
    v_type := 'IT_PROG';
    dbms_output.put_line(v_type);
  end;

declare
  v_type employees.job_id%type;
  v_type2 v_type%type;
  v_type3 employees.job_id%type;
  begin
    v_type := 'IT_PROG';
    v_type2 := 'SA_MAN';
    v_type3 := null;
    dbms_output.put_line(v_type);
    dbms_output.put_line(v_type2);
    dbms_output.put_line(v_type3 || 'Hello');
  end;


--PL/SQL Delimiters and Commenting 

declare
  v_text varchar2(10) := 'PL/SQL';
begin
  dbms_output.put_line(v_text || ' is a good language.');
end;


--PL SQL Variable Scope


begin <<outer>>
DECLARE
  v_outer VARCHAR2(50) := 'outer!';
  v_text VARCHAR2(50) := 'out-text!';
BEGIN
  dbms_output.put_line(v_outer);
  declare
    v_inner varchar2(50) := 'inner!';
    v_text varchar2(50) := 'in-text!';
  BEGIN
    dbms_output.put_line('inside -> ' || v_outer);
    dbms_output.put_line('inside(inner) -> ' || v_inner);
    dbms_output.put_line('inside_text -> ' || v_text);
    dbms_output.put_line('inside_text(outer) -> ' || outer.v_text);
  END;
  --dbms_output.put_line(v_inner);
  dbms_output.put_line('outside -> ' || v_text);
END;
end outer;


--Using Bind Variables

set autoprint on;
variable var_text varchar2(30);
variable var_num number;

declare
  v_text varchar2(30);
begin
  :var_text := 'Hello PL/SQL';
  :var_num := 20;
  v_text := :var_text;
  --dbms_output.put_line(v_text);
  --dbms_output.put_line(:var_text);
end;

print var_text;

variable var_sql number;
begin
  :var_sql := '100';
end;

select * from employees where employee_id = :var_sql;


