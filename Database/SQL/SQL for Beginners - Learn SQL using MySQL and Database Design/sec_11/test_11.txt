use cinema_booking_system; 

#non-correlated subquery
select * from screenings;
select * from films;


select id, start_time from screenings
where film_id in
	(select id from films
		where length_min > 120); 

select id from films
		where length_min > 120

-- where
select * from customers;
select * from bookings;

select first_name, last_name, email from customers
where id in
	(select customer_id from bookings
		where screening_id = 1);

select customer_id from bookings
		where screening_id = 1;

-- from
select * from reserved_seat;

select booking_id, count(seat_id) as no_seats from reserved_seat
group by booking_id;

select avg(no_seats), max(no_seats) from
(select booking_id, count(seat_id) as no_seats from reserved_seat
group by booking_id) b;

#correlated subquery
select * from reserved_seat;

select screening_id, customer_id from bookings
order by screening_id;

select screening_id, customer_id,
(select count(seat_id)
from reserved_seat 
where booking_id = b.id)
from bookings b
order by screening_id;


#exec 1
-- 1. Select the film name and length for all films with a length greater than the average film length. 
select * from films;

select name, length_min from films
where length_min > 
( select avg(length_min) from films );

select avg(length_min) from films;

-- 2. Select the maximum number and the minimum number of screenings for a particular film.
select * from screenings;

select max(id), min(id) from
( select film_id, count(id) as id from screenings
	group by film_id) a;

select film_id, count(id) as id from screenings
group by film_id;

-- 3. Select each film name and the number of screenings for that film.
select * from screenings;
select * from films;

select name, 
( select count(id) from screenings
	where film_id = f.id)
from films f;














